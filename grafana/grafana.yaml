# Grafana deployment with provisioning for Prometheus datasource and custom dashboard
# Apply with: kubectl apply -f grafana/grafana.yaml


# ConfigMap: Prometheus datasource definition
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
  labels:
    app: grafana
    grafana_datasource: "1"
data:
  datasource.yml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.monitoring.svc.cluster.local:9090
        isDefault: true
---
# ConfigMap: dashboard provider (tells Grafana to load dashboards from /etc/grafana/dashboards)
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
  namespace: monitoring
  labels:
    app: grafana
    grafana_dashboard: "1"
data:
  dashboards.yml: |-
    apiVersion: 1

    providers:
      - name: 'GST Demo Dashboards'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /etc/grafana/dashboards
---
# ConfigMap: actual dashboard JSON
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
  labels:
    app: grafana
    grafana_dashboard: "1"
data:
  gst-spring-dashboard.json: |-
    {
      "annotations": {
        "list": []
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "gnetId": null,
      "graphTooltip": 0,
      "id": null,
      "iteration": 1659331053101,
      "links": [],
      "panels": [
        {
          "id": 1,
          "title": "User Registrations",
          "type": "stat",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "user_reg_total",
              "refId": "A"
            }
          ],
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "orientation": "auto",
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto"
          }
        },
        {
          "id": 2,
          "title": "Invoices Uploaded",
          "type": "stat",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "invoices_uploaded_total",
              "refId": "A"
            }
          ],
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            }
          }
        },
        {
          "id": 3,
          "title": "Returns Processed",
          "type": "stat",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "returns_processed_total",
              "refId": "A"
            }
          ],
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            }
          }
        }
      ],
      "schemaVersion": 30,
      "style": "dark",
      "tags": [
        "gst-demo"
      ],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timezone": "",
      "title": "GST Demo Microservices",
      "uid": "gst-demo",
      "version": 1
    }
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.4.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboard-provider
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards-vol
              mountPath: /etc/grafana/dashboards
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboard-provider
          configMap:
            name: grafana-dashboard-provider
        - name: dashboards-vol
          configMap:
            name: grafana-dashboards
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: grafana